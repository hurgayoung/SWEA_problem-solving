# 그래프의 표현 방법

"""
1      4
| \    |
|   \  | 
2 ---- 3

"""

# 인접행렬
# 연결되어 있으면 1, 아니면 0
N = 4
adj = [[0]*(N+1) for _ in range(N+1)]
print(adj)

adj[1][2] = adj[2][1] = 1
adj[2][3] = adj[3][2] = 1
adj[1][3] = adj[3][1] = 1
adj[3][4] = adj[4][3] = 1

print(adj)


# 인접리스트
# 연결되어있는 정점 번호를 리스트로 나타내는 것
adj_list = [[] for _ in range(N+1)] # 일단 비어있는 리스트를 N+ 1개 만든다.
adj_list[1] = [2, 3]
adj_list[2] = [1, 3]
adj_list[3] = [1, 2, 4]
adj_list[4] = [3]



# 간선리스트
edge_list = [(1, 2), (1, 3), (2, 3), (3, 4)]


# 그래프로 해석할 수 있는 경우
arr = [
    [1, 3, 1, 2],
    [1, 0, 1, 0],
    [1, 0, 1, 0],
    [1, 0, 0, 0],
]

# arr: 인접행렬이 아니고
# 0번은 통로, 1번은 벽, 2번은 출발점, 3번은 도착점
# 해석: 0, 2, 3번 => 노드
#     간선? 각 노드에서 상하좌우를 봐서 1이 아니면 연결되어 있는 것으로 본다