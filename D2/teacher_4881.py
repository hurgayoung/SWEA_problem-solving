# 4881 배열 최소 합

# NQueen, visite, 재귀함수설계 필요

T = int(input())

def f(idx, sum):
    # idx 현재 선택해야 하는 행의 index
    # sum 직전까지 선택한 모든 수의 합
    # 기저조건
    if idx == N: # 행은 0, ... , N-1까지만 있음
        return # 종료

    # 유도조건
    # 열 번호: 0, ..., N-1
    # 열 번호 중에서 하나를 선택 => 그 다음 행 선택하러 가기 f(idx+1) 호출

for tc in range(1, T+1):
    N = int(input())
    arr = [list(map(int, input().split())) for _ in range(N)]


    # 재귀함수 설계하기
    # 한 번에 모든 행의 숫자 선택 x
    # 한 번에 한 행만 선택한 후, 나머지는 그 다음 함수 호출에 넘기기

    # 합을 구하는 문제
    # 행에서 특정 숫자를 선택할 때마다 합이 누적됨
    # 재귀 호출을 하면서 합을 누적해 나가는 것이 효율적

    f(0, 0) # 0번 행에서 숫자 선택하기, 처음에는 합이 0으로 출발
